/* The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors? */

#include <iostream>
int sum(int n)
{
    return (n) * (n + 1) / 2;
}

int findAmountOfDivisors(int n)
{
    int numberOfDivisors = 1;
    for (int i = 1; i < n; i++)
    {
        if (n % i == 0)
            numberOfDivisors++;
    }
    return numberOfDivisors;
}

int main()
{
    int numberOfDivisors = 0;
    int i = 0;
    while (numberOfDivisors < 500)
    {
        i++;
        numberOfDivisors = findAmountOfDivisors(sum(i));
        std::cout << (sum(i))<< " : " << numberOfDivisors << std::endl;
    }
    std::cout << sum(i);
    return 0;
}